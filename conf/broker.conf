# @Bevywise.com IoT Initiative. All rights reserved 
# www.bevywise.com | Email - support@bevywise.com
#
# This file has the startup configurations for the MQTT Broker. 
#  

#################### MQTT AUTHENTICATION  #########################

# Set AUTHENTICATION_ENABLED = YES, if the MQTT devices send Username & Password while connecting.
# Set AUTHENTICATION_ENABLED = NO, if the MQTT devices DO NOT send Username & Password while connecting.

[AUTHENTICATION]

AUTHENTICATION_ENABLED = NO
# YES || NO


#################### MQTT BROKER CONFIGURATION  #########################

# PORT_NO       - TCP port of the Broker
# WS_PORT_NO    - Websocket port of the Broker

# TLS_ENABLED   - If set as TRUE, the Broker will run with SSL and WSS. 
# TLS_PORT      - TLS port of the Broker
# WSS_PORT_NO   - Secure Websocket port of the Broker
# SERVER_CERTIFICATE, SERVER_KEY, CA_CERTIFICATE - Used when TLS_ENABLED = TRUE 

[CONFIG]

PORT_NO = 1883 
WS_PORT_NO = 10443

TLS_ENABLED = FALSE
SERVER_CERTIFICATE = ./../Certificate/server/server.crt
SERVER_KEY = ./../Certificate/server/server.key
CA_CERTIFICATE = ./../Certificate/root/root.crt
# TLS_PORT must be 88xx. 
TLS_PORT_NO = 8883
WSS_PORT_NO = 11443

# Set BINARY_SUPPORT = TRUE if the MQTT payload is sent as binary data or UTF8.
# Set BINARY_SUPPORT = FALSE if the MQTT payload is strictly of UTF8 format.
BINARY_SUPPORT = TRUE


#################### REMOTE AUTHENTICATION  #########################

# If the devices need to be authenticated in a private server, then set
    # AUTHENTICATION_ENABLED = YES
    # REMOTEAUTH_ENABLED = YES
    # Implement the method handle_Device_Auth() in a Python file and set that file path in INTERCEPT_FILEPATH.
    # By default, if REMOTEAUTH_ENABLED = YES, then the method handle_Device_Auth() defined in ./../extensions/custom_auth.py is used.

[REMOTEAUTH]

REMOTEAUTH_ENABLED = NO
# YES || NO

INTERCEPT_FILEPATH = ./../extensions/custom_auth.py


#################### CLIENT CONFIGURATION #########################

[MQTT]

# CLIENTID_PREFIX is used as a prefix to generate ClientId of devices that connect without ClientId
CLIENTID_PREFIX = Bevywise-

# If CLEAR_SESSION = DEFAULT, then clean_session value sent by Client will be used.
# If CLEAR_SESSION = DISABLED, then clean_session = 1 will be used. Every connection will be made fresh.
CLEAR_SESSION = DEFAULT
# DEFAULT || DISABLED


#################### USER INETERFACE CONFIGURATION #########################

# You can either use an Apache at the front end or you can change the 
# port to 80 and run as super admin. 

[UI]

UI_Http_Port = 8080

# When you use the REST API and send command, the Broker uses two Internal MQTT clients
# This configuration disables the listing of the clients on the UI. 
# Set it TRUE, to track the sent messages of the clients.
LIST_API_CLIENTS = FALSE

[WEBSOCKET]

WEBSOCKET_PORT = 8081

# If WEB_LOGIN = ENABLED, User Interface can be viewed in a Browser at UI_Http_Port. 
# WEB_USERNAME and WEB_PASSWORD secure the User Interface. These can be changed.
# If WEB_LOGIN = DISABLED, User Interface will not be available.
[WEB_LOGIN_PAGE]

WEB_LOGIN = ENABLED
# ENABLED || DISABLED

WEB_USERNAME = admin
WEB_PASSWORD = admin


#################### HIGH AVAILABILITY SERVER #########################

# High Availability(HA) Server runs as a separate server and connects multiple Brokers.

[HASERVER]

HASERVER_ENABLED = NO
# YES || NO

# When HASERVER_ENABLED = YES, its ip address and port can be set with HASERVER_IP & HASERVER_PORT
HASERVER_IP = 127.0.0.1
HASERVER_PORT = 8082

HASERVER_STRICT_CONNECT = NO
# YES || NO
# If YES, the Broker will wait till High Availability Server is connected.
# If NO, the Broker will resume even if High Availability Server is not connected.

#################### SYS TOPIC #########################
# When SYSTOPIC = ENABLED, the Broker publishes its status to SYSTOPIC
# Default: DISABLED
[SYS_TOPIC]

SYSTOPIC = DISABLED
# ENABLED || DISABLED

# Interval in which SYSTOPIC PUBLISH occurs. (in seconds)
SYSTOPIC_INTERVAL = 3


#################### LOG HANDLER #########################

# The logger configuration of the MQTTRoute. 

[LOG_HANDLER]

# The path and the file name of the logging. LOG_FILE_PATH is relative path from bin/ folder. 
LOG_FILE_PATH = ../log/broker.log

# 1 - DEBUG, 2 - INFO, 3 - ERROR
# By default INFO level will be set. In case of issues from client, DEBUG can be set.
LOG_LEVEL = 2
# 1 || 2 || 3

# The maximum size of the file ( in MB - Megabytes).  To SET 3MB specify as 3.
MAX_FILE_SIZE = 3

# The number of log files to be retained. Older files will be deleted. 
BACKUP_FILE_COUNT = 10





